import Foundation

struct TestCertificates {
    static let trusted = Chain(
        authority: Certificate("MIIExDCCA6ygAwIBAgIEUdNgzzANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMTQwODI2MTcxNDQ5WhcNMjQwODI3MDgzNDQ3WjCBujELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEuMCwGA1UEAxMlRW50cnVzdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEwxSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANo/ltBNuS9E59s5XptQ7lylYdpBZ1MJqgCajld/KWvbx+EhJKo60I1HI9LtchbwkSHSXbe4S6iDj7eRMmjPziWTLLJ9l8j+wbQXugmeA5CTe3xJgyJoipveR8MxmHoufUAL0u8+07KMqo9Iqf8A6ClYBve2k1qUcyYmrVgO5UK41epzeWRoUyW4hM+Ueq4GRQyja03Qxr7qGKQ28JKyuhyIjzpSf/debYMcnfAf5cPW3aV4kj2wbSzqyc+UQRlxRGi6RzwE6V26PvA19xW2nvIuFR4/R8jIOKdzRV1NsDuxjhcpN+rdBQEiu5Q2Ko1bNf5TGS8IRsEqsxpiHU4r2RsCAwEAAaOByzCByDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TBAgwBgEB/wIBADAzBggrBgEFBQcBAQQnMCUwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLmVudHJ1c3QubmV0MDAGA1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmwuZW50cnVzdC5uZXQvZzJjYS5jcmwwHQYDVR0OBBYEFIKicHTdvFM/z3vU981/p2DGCky/MB8GA1UdIwQYMBaAFGpyJnrQHu995ztpUdRsjZ+QEmarMA0GCSqGSIb3DQEBCwUAA4IBAQABGUAYTLooPBQ3tGo723EtMXSENfDq9VTIRtcpFXOeX+Ud6Dc7W70n/UeoFnFuNwCU8itlX4dhC6BEUhtfvrZNMkqsFJSTbCM288cEL+kJETObWkxFi/9ElZ2HHpaO3GjILlYfled/IoRl+1FNdsuCbAP2re+5kqO9o9GEADps6xQjdQBShe2pgPtJLgy/ctGI0/w7ychJun5DVxgNcwHE2SopMw50ATIFcrCMVh4vacT9x6Aqn07IV4pf1qLDNe/mHIBMNQOucuqMf1q7PMIkCM4LHGexG6ApbwBQYwJp6GiaZR0dwYvifuc46qX1D2lnGyC1EktHnL3lazAZFuFC"),
        intermediate: Certificate("MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcyNTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/TRU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWNcCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hWwcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzANBgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZRkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4RnAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmHVHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g=="),
        leaf: Certificate("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")
    )
    
    static let untrusted = Chain(
        authority: Certificate("MIIDVDCCAjygAwIBAgIBATANBgkqhkiG9w0BAQsFADBbMRgwFgYDVQQDDA9HYXRld2F5LVRlc3QtQ0ExCzAJBgNVBAYTAlVTMTIwMAYJKoZIhvcNAQkBFiNzaW1wbGlmeV9tb2JpbGVfdGVhbUBtYXN0ZXJjYXJkLmNvbTAeFw0xODAxMTAxNTI5MjNaFw0yMzAxMDkxNTI5MjNaMFsxGDAWBgNVBAMMD0dhdGV3YXktVGVzdC1DQTELMAkGA1UEBhMCVVMxMjAwBgkqhkiG9w0BCQEWI3NpbXBsaWZ5X21vYmlsZV90ZWFtQG1hc3RlcmNhcmQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAltjlgAKG7OsnHz3HOpwocRyiqBa4XXNUZd7ouu8dmptt7Jd2XDj1EcKMZuJAzBgcIGwnUYW8gJ4DhgYq8aATp11jANtH9FDQUj11xVOvXliuv8nsi6wiDqZedg2yUZeTeidJNYt+Q4DzEjGDlqX4scsHYvJd61JZuJg4YhMJlaNVwzmb3TMypNeSEwNjCxYPAOn+4mcQyZFcwTDs6Tdm0crQDN480OYBPMXkg19W9mjayGfVVRNr8RjoPOkHS7BnUEo+vUDmXc3HGW1pOlQz5n6b3H0KB22TSNnu5oMTxaXBg8x27eaoBbG8oQJM5mJBkBVQEHwVK2sRQreYbD+qjQIDAQABoyMwITAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwICpDANBgkqhkiG9w0BAQsFAAOCAQEAG43jXOjxMTlg0/kAJj21YmOU3lIgjMl/0TAYdJR93nw6XWavngrL0QWbIg3lKIutj7GpsPK6Q+BEXoIpzaCi9bnmcQ1KMchxm/Edt6D59BlwP98cmcrcu5YJNwB04+gW0Yfjlb69NRm3seh37RAWQ3W3WwLN7XGgfNEDq4BJ/W9CBHONcTIaNQVSRlil7VOIT6m8q0HuImIYDijkC7Yz6o+zdrSJrnYENJdWBr5tZnD4mtJmBYN9+w+oItQRTtlHS4gw+19sxhOuBZu0nf2ecWezaGqabexaRCQ2KTngT13hxZZ6j97kMklnyGS+g7zc9YBpFde9C6c3EFSToFaOFg=="),
        intermediate: Certificate("MIIDXjCCAkagAwIBAgIBAjANBgkqhkiG9w0BAQsFADBbMRgwFgYDVQQDDA9HYXRld2F5LVRlc3QtQ0ExCzAJBgNVBAYTAlVTMTIwMAYJKoZIhvcNAQkBFiNzaW1wbGlmeV9tb2JpbGVfdGVhbUBtYXN0ZXJjYXJkLmNvbTAeFw0xODAxMTAxNTMwNDFaFw0yMzAxMDkxNTMwNDFaMGUxIjAgBgNVBAMMGUdhdGV3YXktVGVzdC1JbnRlcm1lZGlhdGUxCzAJBgNVBAYTAlVTMTIwMAYJKoZIhvcNAQkBFiNzaW1wbGlmeV9tb2JpbGVfdGVhbUBtYXN0ZXJjYXJkLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMrgeURcLXf38jsZy68DmpqKfiPknvSSEdDHXvQmK5uon/m1CZWi8y6r0ttG7W0UReAMHrfgn/nk/PWgjkb1aSCUKlexL+CSxrhWuda8oKTX/ctZTijRANCcOwAn5XpJ9Qc29BeBL0f/5DOPNbFT2BA/vginarx4n+e7yo1DlAwxRWiV7hozvQVzrVk0eeSCqB67nebvzdVvNIEpuG9f1grcvS91KxUGkBPaLDnN5p3LBVrQHC+qGaJC7j8u16sOKvN2C92Esh6gfeS1JoEVvO0XmZxTX3j3ZVYjttOeoeruWhXTV3gqQUZsBSG7/wGDgbv+4K2ND7YcM+92LLhcNcECAwEAAaMjMCEwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAqQwDQYJKoZIhvcNAQELBQADggEBAGrj55/SL2pfAQmFp6Ilw1PYQrpl0N71M9J1gXaO8amOp791GmmsqXuW6rOfN+uYH2dS/t7iWL00w+rkp1uk9fOt06yqu2OCD5Q5+x0rpTKlTfNO6rN3N6AO9ub/IuGU53bZtW4jgyr7wI1n9DriRASZeJQakiu1l5qI8SaeMLmC8oUrMe6VHDrpURh7TqqwH6YafuufMmiuyRbv6b0ambQOJOJqziYWY4G0vLBow4fpGk9XqlH7qeCs2po7L4rp1YydT66QfHzWvfuUpHX57uNFfvDlvH+RhGNpnxORcRew6dvSr2nY4tDqqwCxgXaJK1bb9IlEMvUDySgZkdOh2/o="),
        leaf: Certificate("MIIDNjCCAh6gAwIBAgIBAzANBgkqhkiG9w0BAQsFADBlMSIwIAYDVQQDDBlHYXRld2F5LVRlc3QtSW50ZXJtZWRpYXRlMQswCQYDVQQGEwJVUzEyMDAGCSqGSIb3DQEJARYjc2ltcGxpZnlfbW9iaWxlX3RlYW1AbWFzdGVyY2FyZC5jb20wHhcNMTgwMTEwMTUzMTQ3WhcNMjMwMTA5MTUzMTQ3WjBYMRUwEwYDVQQDDAxHYXRld2F5LVRlc3QxCzAJBgNVBAYTAlVTMTIwMAYJKoZIhvcNAQkBFiNzaW1wbGlmeV9tb2JpbGVfdGVhbUBtYXN0ZXJjYXJkLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANmSOFG5EQBY7xg2bpuKk6Zyv4YbUQsl+LLNXLwBmgkoVFnrbtsvRT5nX6nqeUkEgOoEPgo8Px7UGec6wq2FuZfvGRbsKNX+kGL7vRWcdf/ru/TfZwP0uyBee41IIxIF+MQMgKvIiJcrJKiPkJtlVwbQ8t7zUt89FYYSeiCF2J8LbzJuUuLQ9vIKX2yd9Di6t80ZYrH+ljmE+wsc1nqNRyBU+STL7QslfeR1WfbLQ7odMlpzXUgqQHSyoOoB+d8MnNvP6VKd03Wg6zW1iDPo48SlPmP1cnpwNba+dm+YwjiDxUew4+64/li1jx3KFe5fPL4X5eEw0YL8t0jLQWQjyI0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAfk8BrcJNQ079t8BffrGIHZjTtIuIZVCRHCWLUe2U9h1zT3b1h+fuRW1vL2BH2ZnCUD/hNXfGWZA2nAD9VwcGFGHfPUto8pW6T//G2YafHwwPncrEgzdxFqEDa9B7gIKv7Ba7kW7hP+k8t33HNeMbjLxw5oXUX/Wnqyj22zhAw3fXtBWMu+asReOWngNvP2h96MS3GIS7NrKr83vvn2D0LG/wHau0dUnyWyd5sSoYCD9AzIA7cMiASxDFJRleNwkPZBUFkM0F/sinzMaomtOvcvhYPtp8bZnQvZVkPIgQzCrEAuWMmeBjU6g5472M+PliGpm19zn0Vkc3TlqiimzH+Q==")
    )
    
    static let invalid = Chain(
        authority: trusted.authority,
        intermediate: trusted.intermediate,
        leaf: Certificate("MIIDPjCCAiagAwIBAgIBBDANBgkqhkiG9w0BAQsFADBlMSIwIAYDVQQDDBlHYXRld2F5LVRlc3QtSW50ZXJtZWRpYXRlMQswCQYDVQQGEwJVUzEyMDAGCSqGSIb3DQEJARYjc2ltcGxpZnlfbW9iaWxlX3RlYW1AbWFzdGVyY2FyZC5jb20wHhcNMTgwMTEwMjAxNjU2WhcNMTgwMTExMjAxNjU2WjBgMR0wGwYDVQQDDBRHYXRld2F5LVRlc3QtSW52YWxpZDELMAkGA1UEBhMCVVMxMjAwBgkqhkiG9w0BCQEWI3NpbXBsaWZ5X21vYmlsZV90ZWFtQG1hc3RlcmNhcmQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuhTFPj9MY9r0gjnvPtupEyxZbB2TZ4wxLggDw3hvwsn+jZEDwp1ixSe9dX26cUSWkxa1SrBleqDa/GjkVNkldZwoMo7ISruDnNUyleCZy6o0wn3iZ1COfBeYGd1SzoQq1sCiKUGRi6jZ2QaF/KRCQOSavGNm0QolvhOiKSLIbxMujYXD55L8Tb+jrNGjk7bT3h18NAkHQ/2jdV7p7M9zy2h+VJaRoxGVYM+nLAYaTqoaBpGJfQF8TNQNOF1cA0xyZ14TP/ZhGF0qX+X/noIrXPJReTYwj9jC3bai+FVOR3W4TtljWA11FgQbNbkGBf6mtVzhhoeOKi96Qj0lfeDJJQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA9RMqE5+uPGpgANvoT6cgL3rRT50i+QE0WCVuTDQpsnwMnN8SwQUkdnDtaIT2dz4eUm0J0Pjj+xZdFvcakVIrMwnaCRDEfqUd5wtEEezKzo6clQiZiGJzE0AtrmmOUQMB3s9HKja5yD7g/vCe+6XJnHTFeas0NzOmrYbBlNZuOKyUU3FwpId9OMtZUmGM95vpagSUYm43Xjhf8FJEdMaXd6DgFvO9ELfOQmSTOsJ+Kpj/wXXjh5G6eLE+uOIrgi+psRbuIXHvQbNrLSau/9Uaa9h8RsldzmjgYRdjmDj4U2z0yUdJHTfHf+uEBqZHchjT4EOH0JbnbZex4+/1BgWar")
    )
}

extension TestCertificates {
    struct Certificate {
        let derData: Data
        let certificate: SecCertificate
        
        init?(_ derData: Data) {
            guard let certificate = SecCertificateCreateWithData(nil, derData as CFData) else { return nil }
            
            self.derData = derData
            self.certificate = certificate
        }
        
        init?(_ derBase64: String) {
            guard let data = Data(base64Encoded: derBase64) else { return nil }
            
            self.init(data)
        }
    }
}

extension TestCertificates {
    struct Chain {
        let authority: Certificate?
        let intermediate: Certificate?
        let leaf: Certificate?
        
        init(authority: Certificate? = nil, intermediate: Certificate? = nil, leaf: Certificate? = nil) {
            self.authority = authority
            self.intermediate = intermediate
            self.leaf = leaf
        }

        var array: [Certificate] {
            return [leaf, intermediate, authority].compactMap { $0 }
        }

        var certArray: [SecCertificate] {
            return array.map { $0.certificate }
        }
    }
}

